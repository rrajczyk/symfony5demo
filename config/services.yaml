# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    photos_directory: '%kernel.project_dir%/public/uploads/photos'
    admin_email: 'admin@gmail.com'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{EventSubscriber,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EventSubscriber\LocaleSubscriber:
        arguments: ['%kernel.default_locale%']

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%photos_directory%'

    App\Factory\LoggerFactory:
        class: App\Factory\LoggerFactory

    App\Service\Logger:
        factory: ['@App\Factory\LoggerFactory', 'createLogger']
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'

    App\Factory\MessageGeneratorFactory:
        class: App\Factory\MessageGeneratorFactory

    App\Service\MessageHappyGenerator:
        factory: ['@App\Factory\MessageGeneratorFactory', 'createMessageHappy']

    App\Service\MessageBusinessGenerator:
        factory: ['@App\Factory\MessageGeneratorFactory', 'createMessageBusiness']

    App\Service\SiteUpdateManager:
        arguments:
            $swiftmailer: '@swiftmailer.mailer'
            $twig: '@twig'
            $adminEmail: '%admin_email%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
